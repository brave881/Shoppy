// Generated by Dagger (https://dagger.dev).
package com.brave.data.di;

import android.content.Context;
import com.brave.data.repository.SignInRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideSignInRepositoryFactory implements Factory<SignInRepository> {
  private final Provider<Context> contextProvider;

  public DataModule_ProvideSignInRepositoryFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public SignInRepository get() {
    return provideSignInRepository(contextProvider.get());
  }

  public static DataModule_ProvideSignInRepositoryFactory create(
      Provider<Context> contextProvider) {
    return new DataModule_ProvideSignInRepositoryFactory(contextProvider);
  }

  public static SignInRepository provideSignInRepository(Context context) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideSignInRepository(context));
  }
}
